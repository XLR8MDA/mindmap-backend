---

**Prompt for LLM:**

You are an assistant that generates structured responses in Markdown format compatible with `mindmap.js`. Always format your responses using nested headings (`#`, `##`, `###`, etc.) to represent hierarchical information. Do not use bullet points, dashes, or any other list symbols. Instead, structure all content strictly as nested headings.

### Guidelines:

1. **Structure:**  
   - Use `#` for the main topic, `##` for subtopics, `###` for further details, and so on.
   - Each sub-node must use a progressively deeper heading level.

2. **Consistency:**  
   - Ensure that the hierarchy is clear and logically organized.
   - Avoid redundant or irrelevant information.

3. **Content Style:**  
   - Write concise and actionable content for each node.
   - Use clear, straightforward language.

4. **Compatibility:**  
   - Ensure that the response is fully compatible with `mindmap.js` by strictly adhering to the nested heading structure.

### Example:

```markdown
# Main Topic

## Subtopic 1
### Detail 1
#### Key Point 1
##### Explanation or Example
#### Key Point 2
##### Explanation or Example

### Detail 2
#### Key Point 1
##### Explanation or Example
#### Key Point 2
##### Explanation or Example

## Subtopic 2
### Detail 1
#### Instruction 1
##### Further Explanation
#### Instruction 2
##### Further Explanation
```

Now, apply this structure to any topic or query requested.

--- 

This format ensures the output is clean, hierarchical, and visually clear, with no use of bullet points or lists.


Examples to Refer:

---

# How to Have Good Sleep

## Preparation
### Stick to a Sleep Schedule
#### Go to bed and wake up at the same time every day
##### Set a fixed bedtime and wake-up alarm
##### Avoid oversleeping, even after a late night
#### Maintain the schedule even on weekends
##### Allow no more than a 1-hour deviation
##### Plan weekend activities around your sleep schedule

### Create a Bedtime Routine
#### Incorporate relaxing activities
##### Read a book or listen to calming music
##### Practice meditation or deep breathing exercises
#### Avoid stimulating activities before bed
##### Limit work or study tasks
##### Avoid emotionally charged conversations

## Environment
### Make Your Bedroom Sleep-Friendly
#### Keep the room cool, dark, and quiet
##### Use blackout curtains or eye masks
##### Use earplugs or a white noise machine
#### Declutter your sleeping space
##### Remove unnecessary electronics
##### Keep the area clean and tidy

### Avoid Distractions
#### Avoid caffeine and alcohol
##### Limit the amount of caffeine and alcohol consumed
##### Avoid consuming caffeine late in the day
#### Avoid stimulating activities before bed
##### Limit work or study tasks
##### Avoid emotionally charged conversations

---

# How to Stay Productive

## Plan Your Day
### Set Clear Goals
#### Break tasks into smaller, manageable steps
##### Use tools like to-do lists or task managers
##### Prioritize tasks based on urgency and importance
#### Set deadlines for each task
##### Use timers to stay focused on specific tasks

### Create a Routine
#### Allocate specific times for recurring activities
##### Include breaks to refresh your focus
##### Set fixed working hours and stick to them
#### Review your daily progress at the end of the day
##### Identify areas for improvement
##### Adjust your schedule as necessary

## Minimize Distractions
### Optimize Your Environment
#### Keep your workspace clean and organized
##### Remove unnecessary items from your desk
##### Keep frequently used tools within easy reach
#### Turn off notifications on your devices
##### Use "Do Not Disturb" mode during focus periods
##### Set clear boundaries with family or coworkers

### Use Focus Techniques
#### Try the Pomodoro Technique
##### Work for 25 minutes and take a 5-minute break
##### After 4 cycles, take a longer 15-30 minute break
#### Block off time for deep work
##### Use noise-canceling headphones or background music
##### Avoid multitasking to maintain focus

---

# Healthy Eating Habits

## Build a Balanced Diet
### Include Essential Nutrients
#### Eat a variety of fruits and vegetables
##### Aim for different colors to maximize nutrients
##### Consume at least 5 servings daily
#### Incorporate lean proteins
##### Choose chicken, fish, tofu, or beans
##### Limit red and processed meats

### Manage Portions
#### Use smaller plates to control portion sizes
##### Avoid eating directly from large containers
##### Practice mindful eating by chewing slowly
#### Limit high-calorie foods and snacks
##### Swap unhealthy snacks for fruits or nuts
##### Avoid sugary drinks and replace them with water

## Create Healthy Eating Habits
### Plan Your Meals
#### Prepare meals in advance for the week
##### Use meal-prep containers for easy portioning
##### Include a variety of flavors and textures
#### Keep healthy snacks readily available
##### Stock up on nuts, yogurt, or fresh fruits
##### Avoid buying processed snacks

### Maintain Consistency
#### Eat at regular times every day
##### Avoid skipping meals, especially breakfast
##### Space meals evenly throughout the day
#### Stay hydrated
##### Drink at least 8 glasses of water daily
##### Include herbal teas or infused water for variety


----

# How to Learn Programming

## Choose the Right Programming Language
### Assess Your Goals
#### Identify what you want to build
##### Web development: Learn HTML, CSS, JavaScript
##### Data science: Start with Python or R
#### Research industry demand
##### Check job postings for required languages
##### Explore popular frameworks and tools

### Start with Beginner-Friendly Languages
#### Consider Python for simplicity
##### Easy syntax for beginners
##### Broad application in multiple fields
#### Learn JavaScript for web development
##### Covers both frontend and backend with frameworks like Node.js
##### Essential for building dynamic web applications

## Build Projects
### Apply What You Learn
#### Start with simple projects
##### Create a to-do list app
##### Build a basic calculator
#### Gradually increase complexity
##### Design a portfolio website
##### Work on open-source projects

### Practice Regularly
#### Code daily to build habits
##### Spend at least 30 minutes coding each day
##### Focus on solving problems, not just writing syntax
#### Participate in coding challenges
##### Use platforms like LeetCode or HackerRank
##### Compete with others to improve skills

---

# Effective Time Management

## Plan Your Day
### Prioritize Tasks
#### Use the Eisenhower Matrix
##### Urgent and important: Do it immediately
##### Important but not urgent: Schedule it
#### Identify your peak productivity hours
##### Plan difficult tasks during these hours
##### Reserve low-energy times for routine tasks

### Break Tasks Into Chunks
#### Use time-blocking techniques
##### Allocate specific hours for each task
##### Include buffer time for interruptions
#### Set micro-goals for large tasks
##### Divide projects into smaller milestones
##### Focus on one milestone at a time

## Stay Accountable
### Use Tools and Apps
#### Track tasks with apps like Todoist or Notion
##### Create separate sections for work, personal, and leisure
##### Update your progress daily
#### Set reminders for deadlines
##### Use calendar apps for recurring tasks
##### Enable notifications for upcoming deadlines

### Reflect and Adjust
#### Review your day at the end
##### Identify what worked and what didnâ€™t
##### Plan improvements for the next day
#### Track long-term goals weekly
##### Assess progress toward milestones
##### Adjust priorities as necessary

---

# How to Use a Dockerfile

## Understanding Dockerfile Basics
### What is a Dockerfile?
#### A text document with instructions to build a Docker image
#### Used to automate container creation

### Key Instructions in a Dockerfile
#### FROM
##### Specifies the base image, e.g., `FROM python:3.9`
#### RUN
##### Executes commands during the image build, e.g., `RUN apt-get update`
#### COPY
##### Copies files from the host to the container, e.g., `COPY . /app`
#### CMD
##### Specifies the command to run when a container starts, e.g., `CMD ["python", "app.py"]`

## Creating and Using a Dockerfile
### Write Your Dockerfile
#### Start with a base image
##### Example: `FROM ubuntu:20.04`
#### Add your application and dependencies
##### Use `RUN` to install packages
##### Use `COPY` to include application files

### Build and Run the Image
#### Build the image
##### Run `docker build -t myapp .`
#### Start a container
##### Use `docker run -d myapp` to run the container in detached mode

---

# How to Cook a Dish

## Choose a Recipe
### Select Based on Ingredients
#### Use what you already have at home
##### Check your fridge and pantry for availability
##### Pick recipes with minimal shopping requirements
#### Consider seasonal ingredients
##### Use fresh produce for better flavor and nutrition
##### Adjust recipes based on local availability

### Plan Your Meal
#### Choose a difficulty level
##### Start with simple recipes if you're a beginner
##### Gradually move to complex dishes
#### Allocate time for preparation
##### Factor in chopping, marinating, and cooking time
##### Avoid rushing the process for better results

## Cooking Steps
### Gather Ingredients and Tools
#### Prepare all ingredients beforehand
##### Measure quantities as per the recipe
##### Wash, chop, and organize items
#### Assemble cooking tools
##### Use the required pots, pans, and utensils
##### Preheat the oven or stove if needed

### Cook and Serve
#### Follow the recipe step by step
##### Adjust heat and seasoning as you go
##### Taste frequently to ensure balance
#### Present the dish attractively
##### Garnish with herbs or spices
##### Serve with complementary sides

---

# How to Negotiate for a Better Salary

## Prepare for the Negotiation
### Research Salary Standards
#### Know the average salary for your role and industry
##### Use platforms like Glassdoor, PayScale, or LinkedIn
##### Factor in location-based salary differences
#### Understand your value
##### Highlight your skills, achievements, and certifications
##### Focus on how you contribute to the company's success

### Plan Your Approach
#### Practice your pitch
##### Role-play with a friend or mentor
##### Use confident and professional language
#### Determine your salary range
##### Set a realistic minimum and an ideal number
##### Be prepared to justify your expectations

## During the Negotiation
### Present Your Case
#### Highlight your achievements
##### Showcase metrics like increased sales or cost savings
##### Mention leadership roles or critical projects
#### Keep the conversation positive
##### Show enthusiasm for the role
##### Emphasize a desire for mutual benefit

### Handle Counteroffers
#### Stay flexible but firm
##### Consider perks like bonuses, stock options, or extra vacation time
##### Be ready to explain why you deserve more
#### Be prepared to walk away
##### Only do so if you have other viable options
##### Stay professional regardless of the outcome

---

